(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{167:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[s._m(0),s._v(" "),a("p",[s._v("代码地址："),a("a",{attrs:{href:"https://github.com/zmy18232766872/demo-room/tree/master/dotline",target:"_blank",rel:"noopener noreferrer"}},[s._v("canvas点线动画"),a("OutboundLink")],1)]),s._v(" "),s._m(1),s._v(" "),s._m(2),s._v(" "),s._m(3),s._v(" "),s._m(4),s._v(" "),s._m(5),s._v(" "),s._m(6),s._v(" "),s._m(7),s._v(" "),s._m(8),s._v(" "),s._m(9),s._v(" "),s._m(10),s._v(" "),s._m(11),s._m(12),s._v(" "),s._m(13),s._v(" "),s._m(14),s._v(" "),s._m(15),s._v(" "),s._m(16),s._v(" "),s._m(17),s._m(18),s._v(" "),s._m(19),s._m(20),s._v(" "),s._m(21),s._v(" "),s._m(22),s._m(23),s._v(" "),a("p",[s._v("当点很多、元素很多的时候再进行画线操作会很繁琐，对于多元素的情况，创建实例对象，把变量存储在实例对象上。")]),s._v(" "),s._m(24),s._v(" "),s._m(25),s._m(26),s._v(" "),s._m(27),s._m(28),s._v(" "),s._m(29),a("p",[s._v("点与点之间连线")]),s._v(" "),s._m(30),s._v(" "),a("p",[s._v("限定点与点的连线距离（优化：根据点之间的距离添加连线颜色透明度）")]),s._v(" "),s._m(31),s._v(" "),s._m(32),s._v(" "),a("p",[s._v("Canvas 画布的工作原理和显示器工作原理一样，都是通过不断的刷新绘制。浏览器的刷新是实时的，而 Canvas 的刷新是手动触发的，如果我们只想在 Canvas 上实现静态的效果，就没必不断刷新。")]),s._v(" "),s._m(33),s._v(" "),s._m(34),s._v(" "),a("p",[s._v("浏览器可以优化并行的动画动作，更合理的重新排列动作序列，并把能够合并的动作放在一个渲染周期内完成，从而呈现出更流畅的动画效果，一旦页面不处于浏览器的当前标签，就会自动停止刷新。")]),s._v(" "),s._m(35),s._v(" "),s._m(36),s._v(" "),s._m(37),s._v(" "),s._m(38),s._m(39),s._v(" "),s._m(40),s._v(" "),s._m(41),s._m(42),s._v(" "),s._m(43),s._v(" "),s._m(44),s._v(" "),s._m(45),s._m(46),s._v(" "),s._m(47),s._m(48),s._v(" "),a("p",[s._v("兼容 requestAnimationFrame")]),s._v(" "),s._m(49),a("p",[s._v("或者使用 setTimeout 向下兼容：")]),s._v(" "),s._m(50),a("p",[s._v("由于点的位置不断变换，因此需要将画线的操作放在动画内执行，点的位置 update 一次就执行一次连线。")]),s._v(" "),s._m(51),s._m(52),s._v(" "),a("p",[s._v("星空效果、下雨效果等")]),s._v(" "),s._m(53),s._v(" "),s._m(54),s._v(" "),a("p",[s._v("不要在style里指定 Canvas 的宽度，Canvas 画布的尺寸的大小和显示的大小是有很大的区别的，在 canvas 里面设置的是才是 Canvas 本身的大小。")]),s._v(" "),s._m(55),s._v(" "),s._m(56),s._v(" "),s._m(57),s._v(" "),s._m(58)])},[function(){var s=this.$createElement,t=this._self._c||s;return t("h1",{attrs:{id:"canvas-点线动画"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#canvas-点线动画","aria-hidden":"true"}},[this._v("#")]),this._v(" canvas 点线动画")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h5",{attrs:{id:"画圆："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#画圆：","aria-hidden":"true"}},[this._v("#")]),this._v(" 画圆：")])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v("arc(x, y, r, start, stop)")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h5",{attrs:{id:"画线："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#画线：","aria-hidden":"true"}},[this._v("#")]),this._v(" 画线：")])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v("moveTo(x, y) 定义线条开始坐标")]),this._v(" "),t("p",[this._v("lineTo(x, y) 定义线条结束坐标")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h5",{attrs:{id:"填充："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#填充：","aria-hidden":"true"}},[this._v("#")]),this._v(" 填充：")])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v("fill()")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h5",{attrs:{id:"绘制："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#绘制：","aria-hidden":"true"}},[this._v("#")]),this._v(" 绘制：")])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v("stroke()")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"_1、画一个点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、画一个点","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、画一个点")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h5",{attrs:{id:"初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化","aria-hidden":"true"}},[this._v("#")]),this._v(" 初始化")])},function(){var s=this.$createElement,t=this._self._c||s;return t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<canvas id="canvas" width="700" height="600">\n  浏览器不支持canvas！\n</canvas>\n')])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br"),t("span",{staticClass:"line-number"},[this._v("3")]),t("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h5",{attrs:{id:"找到-canvas-元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#找到-canvas-元素","aria-hidden":"true"}},[this._v("#")]),this._v(" 找到 "),t("code",[this._v("<canvas>")]),this._v("元素")])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v('let canvas = document.getElementById("canvas");')])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h5",{attrs:{id:"创建-context对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建-context对象","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建 "),t("code",[this._v("context")]),this._v("对象")])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v('let ctx = canvas.getContext("2d");')])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h5",{attrs:{id:"画圆"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#画圆","aria-hidden":"true"}},[this._v("#")]),this._v(" 画圆")])},function(){var s=this.$createElement,t=this._self._c||s;return t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// 坐标（x, y）、半径、开始角度、结束角度、顺时针（逆时针）\nctx.arc(70, 80, 30, 0, Math.PI * 2, false);\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"_2、画很多点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、画很多点","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、画很多点")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('//生成点\nfor (let i = 0; i < dotsNum; i ++) {\n  x = Math.random() * canvas.width;\n  y = Math.random() * canvas.height;\n  r = Math.random() * 4; // 随机生成 <4 的半径值\n\n  ctx.beginPath();\n  ctx.arc(x, y, r, 0, 2 * Math.PI);\n  ctx.fillStyle = "rgba(0,0,0,.8)";\n  ctx.fill();\n  ctx.closePath();\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"_3、画两点一线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、画两点一线","aria-hidden":"true"}},[this._v("#")]),this._v(" 3、画两点一线")])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v("确定两个点的坐标 + lineTo 、moveTo")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("for (let i = 0; i < 2; i++) {\n  ctx.beginPath()\n  // 设置原点位置为（100，100），半径为10\n  ctx.arc(100 + i * 150, 100 + i * 250, 10, 0, Math.PI * 2, false)\n\n  // 两个点进行画线\n  ctx.moveTo(100, 100)\n  ctx.lineTo(100 + i * 150, 100 + i * 250)\n\n  // 设置线的宽度，单位是像素\n  ctx.lineWidth = 2\n  ctx.stroke()\n\n  // 实心圆 - 填充颜色,默认是黑色\n  // 实心圆 - 画实心圆\n  ctx.fill()\n  ctx.closePath()\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"_4、画多点多线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、画多点多线","aria-hidden":"true"}},[this._v("#")]),this._v(" 4、画多点多线")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h6",{attrs:{id:"定义一个dots函数。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义一个dots函数。","aria-hidden":"true"}},[this._v("#")]),this._v(" 定义一个Dots函数。")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var Dots = function () {\n  // 画布\n  this.canvas;\n  this.ctx;\n\n  // 画点\n  this.x;\n  this.y;\n  this.r;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h6",{attrs:{id:"添加一个用于点的生成的初始化方法。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加一个用于点的生成的初始化方法。","aria-hidden":"true"}},[this._v("#")]),this._v(" 添加一个用于点的生成的初始化方法。")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Dots.prototype = {\n  // 初始化点的方法\n  init: function (canvas) {\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext('2d');\n\n    this.x = Math.random() * this.canvas.width;\n    this.y = Math.random() * this.canvas.height;\n    this.r = Math.random() * 4; // 随机生成 <4 的半径值\n\n    this.ctx.beginPath();\n    this.ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI);\n    this.ctx.fillStyle = \"black\";\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h6",{attrs:{id:"在点与点之间进行画线，每两个点之间就有一条线，总共有c-n-2-条线。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在点与点之间进行画线，每两个点之间就有一条线，总共有c-n-2-条线。","aria-hidden":"true"}},[this._v("#")]),this._v(" 在点与点之间进行画线，每两个点之间就有一条线，总共有C(n,2)条线。")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 绘制连线\n  for (var i = 0; i < dotsNum; i ++) {\n    for (var j = i + 1; j < dotsNum; j ++) {\n      var tx = dotsArr[i].x - dotsArr[j].x,\n          ty = dotsArr[i].y - dotsArr[j].y,\n          // 三角形斜边长\n          s = Math.sqrt(Math.pow(tx, 2) + Math.pow(ty, 2));\n\n      if (s < dotsDistance) {\n        ctx.beginPath();\n        ctx.moveTo(dotsArr[i].x, dotsArr[i].y);\n        ctx.lineTo(dotsArr[j].x, dotsArr[j].y);\n        ctx.strokeStyle = 'rgba(0,0,0,'+(dotsDistance-s)/dotsDistance+')';\n\n        ctx.strokeWidth = 1;\n        ctx.stroke();\n        ctx.closePath();\n      }\n    }\n  }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/1/25/16884628fae6ad8e?w=1618&h=1088&f=png&s=1962457",alt:""}})])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/1/25/1688462d88c2a92a?w=1638&h=1188&f=png&s=1984005",alt:""}})])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"_5、requestanimationframe"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、requestanimationframe","aria-hidden":"true"}},[this._v("#")]),this._v(" 5、requestAnimationFrame")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("code",[this._v("requestAnimationFrame")]),this._v("是浏览器用于定时循环操作的一个接口，类似于setTimeout，主要用途是按"),t("code",[this._v("帧")]),this._v("对网页进行重绘。"),t("code",[this._v("requestAnimationFrame")]),this._v("不是自己指定回调函数运行的时间，而是跟着浏览器内建的刷新频率来执行回调。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h6",{attrs:{id:"优势："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优势：","aria-hidden":"true"}},[this._v("#")]),this._v(" "),t("strong",[this._v("优势")]),this._v("：")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h6",{attrs:{id:"使用方式："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用方式：","aria-hidden":"true"}},[this._v("#")]),this._v(" "),t("strong",[this._v("使用方式")]),this._v("：")])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v("持续调用 requestAnimFrame")]),this._v(" "),t("p",[this._v("清除动画调用 cancelAnimationFrame")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h6",{attrs:{id:"动效绘制大致路数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动效绘制大致路数","aria-hidden":"true"}},[this._v("#")]),this._v(" "),t("strong",[this._v("动效绘制大致路数")]),this._v(":")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var canvas = document.querySelector('canvas');\nvar context = canvas.getContext('2d');\n\n// 画布渲染\nvar render = function () {\n    // 清除画布\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    // 绘制(在canvas画布上绘制图形的代码)\n    draw();\n    // 继续渲染\n    requestAnimationFrame(render);\n};\nrender();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("上面的"),t("code",[this._v("draw()")]),this._v("就是在 canvas 画布上绘制图形的代码，但是如果仅仅有上面代码还不够，如果是同一个位置不断刷新，我们看到的还是静止不动的效果，所以还需要一个运动变量。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h6",{attrs:{id:"运动坐标变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运动坐标变量","aria-hidden":"true"}},[this._v("#")]),this._v(" "),t("strong",[this._v("运动坐标变量")]),this._v(":")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var canvas = document.querySelector('canvas');\nvar context = canvas.getContext('2d');\n\n// 坐标变量\nvar x = 0;\n// 绘制方法\nvar draw = function () {\n    ball.x = x;\n};\n// 画布渲染\nvar render = function () {\n    // 清除画布\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    // 位置变化\n    x++;\n    // 绘制\n    draw();\n    // 继续渲染\n    requestAnimationFrame(render);\n};\n\nrender();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"_6、动起来的多点多线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、动起来的多点多线","aria-hidden":"true"}},[this._v("#")]),this._v(" 6、动起来的多点多线")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("strong",[this._v("动的是点，画的是线")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h6",{attrs:{id:"给-dots-对象添加运动变量-sx-和-sy-两个值表示点在x轴和y轴的运动量-此处为在-2-2-之间运动。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#给-dots-对象添加运动变量-sx-和-sy-两个值表示点在x轴和y轴的运动量-此处为在-2-2-之间运动。","aria-hidden":"true"}},[this._v("#")]),this._v(" 给 Dots 对象添加运动变量,sx 和 sy 两个值表示点在x轴和y轴的运动量,此处为在[-2, 2)之间运动。")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let Dots = function () {\n  // 画布\n  this.canvas;\n  this.ctx;\n\n  // 画点\n  this.x;\n  this.y;\n  this.r;\n\n  // 移动\n  // 随机确定点的移动速度与方向 速度值在 [-2, 2) 之间 提高数值可加快速度 \n  //（Math.random() 随机返回[0,1)的数）\n  this.sx = Math.random() * 4 - 2;\n  this.sy = Math.random() * 4 - 2;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h6",{attrs:{id:"添加更新点的方法update"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加更新点的方法update","aria-hidden":"true"}},[this._v("#")]),this._v(" 添加更新点的方法"),t("code",[this._v("update()")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// 更新点位置\n  update: function () {\n    this.x = this.x + this.sx;\n    this.y = this.y + this.sy;\n\n    // 点超出 canvas 范围时重新初始化\n    if (this.x < 0 || this.x > this.canvas.width) {\n      this.init(this.canvas);\n    }\n    if (this.y < 0 || this.y > this.canvas.height) {\n      this.init(this.canvas);\n    }\n\n    this.ctx.beginPath();\n    this.ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI);\n    this.ctx.fillStyle = "rgba(0,0,0,.6)";\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h6",{attrs:{id:"动画及连线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动画及连线","aria-hidden":"true"}},[this._v("#")]),this._v(" 动画及连线")])},function(){var s=this.$createElement,t=this._self._c||s;return t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("  let requestAnimFrame = requestAnimationFrame || webkitRequestAnimationFrame || oRequestAnimationFrame || msRequestAnimationFrame;\n  requestAnimFrame(animateUpdate); // 兼容不同浏览器的 requestAnimationFrame\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// requestAnimationFrame的向下兼容处理\nif (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = function(fn) {\n        setTimeout(fn, 17);\n    };\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("  function animateUpdate() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // 清空canvas中原有的内容\n\n    for (let i = 0; i < dotsNum; i ++) {\n      dotsArr[i].update();\n    }\n\n    // 绘制连线\n    for (let i = 0; i < dotsNum; i ++) {\n      for (let j = i + 1; j < dotsNum; j ++) {\n        let tx = dotsArr[i].x - dotsArr[j].x,\n          ty = dotsArr[i].y - dotsArr[j].y,\n          // 三角形斜边长\n          s = Math.sqrt(Math.pow(tx, 2) + Math.pow(ty, 2));\n        if (s < dotsDistance) {\n          ctx.beginPath();\n          ctx.moveTo(dotsArr[i].x, dotsArr[i].y);\n          ctx.lineTo(dotsArr[j].x, dotsArr[j].y);\n          ctx.strokeStyle = 'rgba(0,0,0,'+(dotsDistance-s)/dotsDistance+')';\n          ctx.strokeWidth = 1;\n          ctx.stroke();\n          ctx.closePath();\n        }\n      }\n    }\n    // 继续渲染\n    requestAnimFrame(animateUpdate);\n  }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"类似的例子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类似的例子","aria-hidden":"true"}},[this._v("#")]),this._v(" 类似的例子")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"你可能不知道的点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#你可能不知道的点","aria-hidden":"true"}},[this._v("#")]),this._v(" 你可能不知道的点")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h5",{attrs:{id:"_1、canvas-画的圆不是圆，是椭圆"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、canvas-画的圆不是圆，是椭圆","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、canvas 画的圆不是圆，是椭圆")])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v("如果不给"),t("code",[this._v("<canvas>")]),this._v("设置 width、height 属性时，则默认 width 为 300、height 为 150, 单位都是 px。也可以使用 css 属性来设置宽高，但是如宽高属性和初始比例不一致，他会出现扭曲。所以，"),t("strong",[this._v("建议永远不要使用css属性来设置"),t("code",[this._v("<canvas>")]),this._v("的宽高。")])])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h5",{attrs:{id:"_2、不要企图通过闭合现有路径来开始一条新路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、不要企图通过闭合现有路径来开始一条新路径","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、不要企图通过闭合现有路径来开始一条新路径")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("strong",[this._v("画新元素前记得要 beginPath()")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("ul",[t("li",[this._v("不管用 moveTo 把画笔移动到哪里，只要不调用beginPath()，一直都是在画一条路径")]),this._v(" "),t("li",[this._v("fillRect 与 strokeRect 这种直接画出独立区域的函数，也不会打断当前的path")])])}],!1,null,null,null);e.options.__file="dot-lines.md";t.default=e.exports}}]);